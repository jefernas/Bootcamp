package com.liferay.training.gestion.personas.portlet;

import com.liferay.training.gestion.personas.constants.PersonasPortletKeys;
import com.liferay.training.personas.model.Personas;
import com.liferay.training.personas.service.PersonasLocalService;
import com.liferay.training.personas.service.PersonasLocalServiceUtil;
import com.liferay.training.personas.service.PersonasService;

import java.io.IOException;
import java.util.Date;
import java.util.List;

import com.liferay.counter.kernel.service.CounterLocalService;
import com.liferay.portal.kernel.dao.orm.QueryUtil;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet;
import com.liferay.portal.kernel.theme.PortletDisplay;
import com.liferay.portal.kernel.theme.ThemeDisplay;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ParamUtil;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.util.WebKeys;

import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.Portlet;
import javax.portlet.PortletException;
import javax.portlet.ProcessAction;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

/**
 * @author jefernas
 */
@Component(
	immediate = true,
	property = {
		"com.liferay.portlet.display-category=category.training",
		"com.liferay.portlet.header-portlet-css=/css/main.css",
		"com.liferay.portlet.instanceable=false",
		"javax.portlet.display-name=Personas",
		"javax.portlet.init-param.template-path=/",
		"javax.portlet.init-param.view-template=/view.jsp",
		"javax.portlet.name=" + PersonasPortletKeys.PERSONAS,
		"javax.portlet.resource-bundle=content.Language",
		"javax.portlet.security-role-ref=power-user,user"
	},
	service = Portlet.class
)
public class PersonasPortlet extends MVCPortlet {
	

    
    @Reference
    PersonasLocalService personasLocalService;
 
    @ProcessAction(name = "addPersonas")
    public void addPersonas(ActionRequest actionRequest,ActionResponse actionResponse) {
        String dni = ParamUtil.getString(actionRequest, "dni");
        String nombre = ParamUtil.getString(actionRequest, "nombre");
        String apellido1 = ParamUtil.getString(actionRequest, "apellido1");
        String apellido2 = ParamUtil.getString(actionRequest, "apellido2");
        String sexo = ParamUtil.getString(actionRequest, "sexo");
        double altura = ParamUtil.getDouble(actionRequest, "altua");
        String trabaja = ParamUtil.getString(actionRequest, "trabaja");
        Date nacimiento = ParamUtil.getDate(actionRequest, "nacimiento", null);
    
        Personas personita = personasLocalService.createPersonas(dni);
        personita.setDni(dni);
        personita.setNombre(nombre);
        personita.setApellido1(apellido1);
        personita.setApellido2(apellido2);
        personita.setSexo(sexo);
        personita.setAltura(altura);
        personita.setTrabaja(Boolean.parseBoolean(trabaja));
        personita.setNacimiento(nacimiento);
        
        
        personasLocalService.addPersonas(personita);
    }
	
    @ProcessAction(name = "updatePersonas")
    public void updatePersonas(ActionRequest actionRequest,  ActionResponse actionResponse) {
    	String dni = ParamUtil.getString(actionRequest, "dni", GetterUtil.DEFAULT_STRING);
        String nombre = ParamUtil.getString(actionRequest, "nombre", GetterUtil.DEFAULT_STRING);
        String apellido1 = ParamUtil.getString(actionRequest, "apellido1", GetterUtil.DEFAULT_STRING);
        String apellido2 = ParamUtil.getString(actionRequest, "apellido2", GetterUtil.DEFAULT_STRING);
        String sexo = ParamUtil.getString(actionRequest, "sexo", GetterUtil.DEFAULT_STRING);
        double altura = ParamUtil.getDouble(actionRequest, "altua", GetterUtil.DEFAULT_DOUBLE);
        String trabaja = ParamUtil.getString(actionRequest, "trabaja", GetterUtil.DEFAULT_STRING);
        Date nacimiento = ParamUtil.getDate(actionRequest, null, null) ;  //(actionRequest, "nacimiento", null, GetterUtil.DEFAULT_DATE_VALUES);
               
        Personas personita = null;
        try {
            personita = personasLocalService.getPersonas(dni);
        } catch (Exception e) {
            e.printStackTrace();;
        }
 
        if(Validator.isNotNull(personita)) {
            //personita.setDni(dni);
            personita.setNombre(nombre);
            personita.setApellido1(apellido1);
            personita.setApellido2(apellido2);
            personita.setSexo(sexo);
            personita.setAltura(altura);
            personita.setTrabaja(Boolean.parseBoolean(trabaja));
            personita.setNacimiento(nacimiento);
            
        }
    }
    
    @ProcessAction(name = "deletePersonas")
    public void deletePersonas(ActionRequest actionRequest, ActionResponse actionResponse){
        String dni = ParamUtil.getString(actionRequest, "dni", GetterUtil.DEFAULT_STRING);
        try {
            personasLocalService.deletePersonas(dni);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

	
	@Override
	public void render(RenderRequest renderRequest, RenderResponse renderResponse)
			throws IOException, PortletException {
		
		ThemeDisplay themeDisplay = (ThemeDisplay) renderRequest.getAttribute(WebKeys.THEME_DISPLAY);
		//String dni = ParamUtil.getString(renderRequest, "dni");
		
		
			// Call the service to get the persona
			List<Personas> personas;
			personas = PersonasLocalServiceUtil.getPersonases(QueryUtil.ALL_POS, QueryUtil.ALL_POS);
	
			// Set attributes to the request.
			renderRequest.setAttribute("personas", personas);
	
			// Set back icon visible.
			PortletDisplay portletDisplay = themeDisplay.getPortletDisplay();
			String redirect = renderRequest.getParameter("redirect");
			portletDisplay.setShowBackIcon(true);
			portletDisplay.setURLBack(redirect);
			//return "/personas/view_personas.jsp";
		super.render(renderRequest, renderResponse);
	}
}